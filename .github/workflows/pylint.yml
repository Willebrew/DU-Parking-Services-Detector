name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        pip install -r requirements.txt
    - name: Create .pylintrc
      run: |
        echo "[MASTER]" > .pylintrc
        echo "ignore-patterns=.*" >> .pylintrc
        echo "ignore-paths=.*" >> .pylintrc
        echo "" >> .pylintrc
        echo "[MESSAGES CONTROL]" >> .pylintrc
        echo "disable=" >> .pylintrc
        echo "    suppressed-message," >> .pylintrc
        echo "    locally-disabled," >> .pylintrc
        echo "    useless-suppression," >> .pylintrc
        echo "    import-error," >> .pylintrc
        echo "    too-few-public-methods," >> .pylintrc
        echo "    duplicate-code" >> .pylintrc
        echo "" >> .pylintrc
        echo "enable=" >> .pylintrc
        echo "    deprecated-pragma," >> .pylintrc
        echo "    use-symbolic-message-instead" >> .pylintrc
        echo "" >> .pylintrc
        echo "[TYPECHECK]" >> .pylintrc
        echo "generated-members=cv2.*" >> .pylintrc
        echo "ignored-modules=PIL,pillow_heif,torch,torchvision,cv2,tqdm" >> .pylintrc
    - name: Analysing the code with pylint
      run: |
        pylint --rcfile=.pylintrc $(git ls-files '*.py')
